
Pseudo code for file system walker.

Overall goal is to iterate over $backup_dirs and notice any deleted, modified, or created
files/directories.  Then build a queue of the changed files sorted by inode.  

First note the time of the start of the backup.

So something like this python code to talk a dir:
top="/home/bill/imp/src/bdr"
addDir(top)
for root, dirs, files in os.walk(top, topdown=True):
    for name in dirs:
        addDir(os.path.join(root,name))
    for name in files:
        addFile(root,name)

Once done the encryption queue should be sorted by inode.

Then addDir and addFile are functions that compare what's on the filesystem with what is
in the database:
* BOTH addFile and addDir update last_seen for EVERYTHING it sees.
* NEVER modify a file or directory with metadata from stat, ALWAYS insert.
* Add directory to SQL if missing or modified.
* Adds file to sql if missing,modified metadata, or modified conetns, and queue it for encryption

One key step is that after the above any file with last_seen older than
the start of the current backup must have been deleted and that needs
to be noted.

Something like:
update files set deleted=TRUE where deleted=FALSE and last_seen < $start_of_backup.



 
